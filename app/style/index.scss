@import "~node.normalize.scss/_normalize.scss";
@import "./constants.scss";

:root {
  --font-size: $font-size;
  --padding: $padding;
  --line-height: $line-height;
  --header-height: $line-height*$font-size;
  --logo-size: $logo-size;
  --logo-aspectRation: $logo-aspectRatio;
  --background-size: calc((100vw - (var(--padding) * 2)) * var(--logo-size));
}

* {
  box-sizing: border-box;
}

body {
  font-size: var(--font-size);
  line-height: var(--line-height);
}

html,
body,
#viewport {
  width: 100%;
  height: 100%;
  display: flex;
  flex-direction: row;
  justify-content: center;
  align-items: flex-start;
}

#viewport {
  overflow: scroll;
}

.app {
  min-height: 100%;
  min-width: $tablet-width;
  width: 80vw;
  max-width: $L-laptop-width;
  padding: var(--padding);
  display: grid;
  grid-template-columns: 35% 1fr;
  grid-template-rows: auto 1fr;
  grid-template-areas: "header header" "input pump";
  background-image: url($logo);
  background-position: var(--padding) calc(var(--header-height) + var(--padding) * 2);
  background-repeat: no-repeat;
  background-size: var(--background-size);
  @media screen and (max-width: $tablet-width) {
    grid-template-columns: 1fr;
    grid-template-rows: auto 1fr 1fr;
    grid-template-areas: "header" "input" "pump";
    background-image: url($logo);
    background-position: 100% 100%;
  }
  @media screen and (min-width: $L-laptop-width) {
    background-size: $L-laptop-width*$logo-size;
  }

  .header {
    grid-area: header;
  }
  .input {
    padding: calc(var(--background-size) / var(--logo-aspectRation)) $padding 0;
    grid-area: input;
    @media screen and (max-width: $tablet-width) {
      padding: 0;
    }
    @media screen and (min-width: $L-laptop-width) {
      padding-top: $L-laptop-width/10;
    }
  }
  .pump {
    grid-area: pump;
    display: flex;
    flex-direction: column;
    justify-content: flex-start;
    align-items: center;
    .dollars,
    .liters {
      width: 60%;
    }
  }
}
